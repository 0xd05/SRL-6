(*
SRL Player Form
===============

The SRL Player Form is an optional script feature.  It allows scripters to
integrate a user interface into their scripts, making it easier for their users
to setup the script.

For a tutorial on how to add the SRL player form to any script, see
`this <http://villavu.com/forum/showthread.php?t=107572>`_ thread.

The source for this file can be found
`here <https://github.com/SRL/SRL-6/blob/master/lib/misc/srlplayerform.simba>`_.

*)

{$include_once srl-6/lib/core/globals.simba}
{$include_once srl-6/lib/core/debug.simba}
{$include_once srl-6/lib/core/players.simba}

{$f+} // On since "native" reqiures it.

{$IFNDEF CODEINSIGHT}
const
  BTN_BMP_TICK = 0;
  BTN_BMP_CROSS = 1;
{$ENDIF}

(*
type TPlayerForm
~~~~~~~~~~~~~~~~

Stores all information pertaining to a TPlayerForm.  View the source file for
a full list of customizable options.
*)
type
  TPlayerForm = record
    // static form components
    mainForm: TForm;
    groupBox: TGroupBox;
    editArmyName: TEdit;
    btnLoadArmy, btnStartScript: TSpeedButton;
    clbPlayers: TCheckListBox;
    btnStart: TButton;
    debug: procedure(s: string);


    maxPlayers: integer;
    name: string; // the title for the main window
    scriptHelpThread: string;
    scriptSettingsPath: string;
    editBoxLabels, editBoxDefaults: TStringArray;
    checkBoxLabels, checkBoxDefaults: TStringArray;
    comboBoxLabels, comboBoxDefaults: TStringArray;
    comboBoxItems: array of TStringArray;
    playerFile: string;
    playerNames: TStringArray;
    isScriptReady: boolean;
    __bmps: array [0..1] of TBitmap; // bitmaps used for speed buttons
    __loadedArmyName: string;
  end;

(*
var playerForm
~~~~~~~~~~~~~~

The variable used by scripters to enable the SRL Player Form.

Example:

.. code-block:: pascal

    playerForm.scriptSettingsPath := 'C:/settings.txt';
*)
var
  playerForm: TPlayerForm;

{*
var Internal
~~~~~~~~~~~~

All internal vairables.  Most are form components.  You should never edit these
unless you know exactly what you're doing.
*}
{$IFNDEF CODEINSIGHT}
var
  __scriptEditBoxes: array of TEdit;
  __scriptEditLabels: array of TLabel;
  __scriptCheckBoxes: array of TCheckBox;
  __scriptCheckLabels: array of TLabel;
  __scriptComboBoxes: array of TComboBox;
  __scriptComboLabels: array of TLabel;
  __btnHelp: TButton;
  __btnSave: TButton;
  __lbDebug: TListBox;
  __debugGroupBox: TGroupBox;
{$ENDIF}


{loads all bitmaps needed for the playerform}
{$IFNDEF CODEINSIGHT}
procedure __TPlayerForm_LoadBitmaps();
const
  strings: TStringArray
var
  i: byte;
begin
  for i := 0 to high(playerForm.__bmps) do
  with (playerForm.__bmps[i]) do
    begin
      init();
      loadFromString(18, 17, 0, strings[i]);
    end;
end;
{$ENDIF}

{frees all bitmaps used by the playerform}
{$IFNDEF CODEINSIGHT}
procedure __TPlayerForm_FreeBitmaps();
var
  i: byte;
begin
  for i := 0 to high(playerForm.__bmps) do
    playerForm.__bmps[i].free();
end;
{$ENDIF}

{$IFNDEF CODEINSIGHT}
procedure __TPlayerForm_LoadArmy(const armyName: string);
var
  j, i: integer;
  a: TIntegerArray;
  tmpArmy: TPlayerArray;
begin
  with (playerForm) do
  begin
    clbPlayers.clear();

    if (Rafiki_FindArmy(armyName)) then
      Rafiki_GetPlayersFromArmy(armyName, tmpArmy);

    if (length(tmpArmy) = 0) then
    begin
      SafeMessageDlg('PlayerForm', format('Army "%s" doesn''t exist, make sure you''ve saved a army in the player manager (SRL > Run Player Manager)', [armyName]), mtWarning, [mbOk]);
      exit();
    end;

    for j := 0 to high(tmpArmy) do
    begin
      clbPlayers.getItems().add(tmpArmy[i].logInName + '  ('+tmpArmy[i].nickName+')');
      for i := 0 to (clbPlayers.getItems().getCount() - 1) do
        insert(clbPlayers.getCanvas().TextWidth(clbPlayers.getItems().getStrings(i)), a);

      clbPlayers.setScrollWidth(MaxA(a) + 25);
    end;

    if (assigned(@debug)) then
      debug(format('Loaded %d players from army "%s"', [length(tmpArmy), armyName]));

    __loadedArmyName := armyName;
  end;
end;

{$ENDIF}

{$IFNDEF CODEINSIGHT}
procedure __TPlayerForm_OnNotifyEvent(Sender: TObject); native;

  function removeNick(const str: string): string;
  var
    p: integer;
  begin
    result := str;

    try
      p := Pos(' (', result);
      if (p > 0) then
        result := copy(result, 0, p);
    finally
      trim(result);
    end;
  end;

var
  i, c, p: integer;
  s: string;
begin
  with (playerForm) do
    case (Sender) of
      btnLoadArmy: __TPlayerForm_LoadArmy(editArmyName.getCaption());
      btnStart:
        begin
          c := clbPlayers.getItems().getCount();

          for i := 0 to (c - 1) do
            if (clbPlayers.getChecked(i)) then
            begin
              p := Pos(' (', clbPlayers.getItems().getStrings(i));
              insert(copy(clbPlayers.getItems().getStrings(i), 0, p - 2), playerNames);
            end;

          if (length(playerNames) = 0) then
          begin
            print('No players have been selected, script not ready!', TDebug.WARNING);
            isScriptReady := false;
          end;

          playerFile := __loadedArmyName;
          isScriptReady := true;
          mainForm.close();
        end;
    end;
end;
{$ENDIF}

{$IFNDEF CODEINSIGHT}
procedure __TPlayerForm_CheckArmyExists(Sender: TObject); native;
begin
  with (PlayerForm) do
    case (Rafiki_FindArmy(editArmyName.getCaption())) of
      true: btnLoadArmy.setGlyph(__bmps[BTN_BMP_TICK]);
      false: btnLoadArmy.setGlyph(__bmps[BTN_BMP_CROSS]);
    end;
end;
{$ENDIF}

{*
__writeln
~~~~~~~~~

.. code-block:: pascal

    procedure __writeln(s: string);

Used to print debug in the form's debug box.  Needed because forms are separate
from Simba and "writeln" doesn't print to Simba's debug box.

.. note::

    - by Coh3n
    - Last Updated: 10 January 2014 by Coh3n

Example:

.. code-block:: pascal

    __writeln('Some debug here');
*}
procedure __writeln(s: string);
var
  i: integer;
  a: TIntegerArray;
begin
  with (__lbDebug) do
  begin
    getItems().append(s);
    setItemIndex(getItems().getCount() - 1);
    setItemIndex(-1);

    for i := 0 to (getItems().getCount() - 1) do
      insert(getCanvas().TextWidth(getItems().getStrings(i)), a);

    setScrollWidth(MaxA(a) + 5);
  end;
end;

procedure __OnNotifyEvent(Sender: TObject); native;
begin
  with (playerForm) do
    case (Sender) of
      __btnHelp:
        begin
          if (assigned(@debug)) then
            debug('Opening script help thread...');

          if (scriptHelpThread = '') then
            openWebPage('http://villavu.com/forum/showthread.php?t=47714')
          else
            openWebPage(scriptHelpThread);
        end;

      __btnSave:
        begin
          if (assigned(@debug)) then
            debug('Saving settings');
        end;
    end;
end;

{*
__createScriptComponents
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure __createScriptComponents();

Creates all the form's components based on the "playerForm"'s settings.

.. note::

    - by Coh3n
    - Last Updated: 10 January 2014 by Coh3n

*}
procedure __createScriptComponents();
  function getLongestText(const txtArr: T2DStringArray): integer;
  var a: TIntegerArray; i, j: integer;
  begin
    for i := 0 to high(txtArr) do
      for j := 0 to high(txtArr[i]) do
        insert(playerForm.mainForm.getCanvas().TextWidth(txtArr[i][j]), a);

    exit(MaxA(a));
  end;

var
  i, j, lblLeft, lblWidth, cmpLeft, cmpWidth, top, topInc: integer;
  first: boolean;
  frmWidth: TIntegerArray;
begin
  with (playerForm) do
  begin
    debug := @__writeln;


  mainForm.setCaption(name);
  lblLeft := groupBox.getLeft() + groupBox.getWidth() + 14;
  cmpLeft := lblLeft + getLongestText([playerForm.editBoxLabels, playerForm.checkBoxLabels, playerForm.comboBoxLabels]) + 7;
  lblWidth := 20;
  cmpWidth := 100;
  top := 40;
  topInc := top;
  first := true;

  // TEdit boxes
  setLength(__scriptEditBoxes, length(playerForm.editBoxLabels));
  setLength(__scriptEditLabels, length(__scriptEditBoxes));
  for i := 0 to high(playerForm.editBoxLabels) do
  begin
    if (first) then
      top := 10;

    __scriptEditBoxes[i].init(mainForm);
    with __scriptEditBoxes[i] do
    begin
      setParent(mainForm);
      setLeft(cmpLeft);
      setTop(top);
      setWidth(cmpWidth);
      setCaption(playerForm.editBoxDefaults[i]);
    end;

    __scriptEditLabels[i].init(mainForm);
    with __scriptEditLabels[i] do
    begin
      setParent(mainForm);
      setTop(top + 3);
      setLeft(lblLeft);
      setWidth(lblWidth);
      setCaption(playerForm.editBoxLabels[i]);
    end;

    if (first) then
    begin
      first := false;
      topInc := topInc - 10;
    end;

    top := top + topInc;
    insert(cmpLeft + cmpWidth, frmWidth);
  end;

  // TComboBoxes
  setLength(__scriptComboBoxes, length(playerForm.comboBoxLabels));
  setLength(__scriptComboLabels, length(__scriptComboBoxes));
  for i := 0 to high(playerForm.comboBoxLabels) do
  begin
    if (first) then
      top := 10;

    __scriptComboBoxes[i].init(mainForm);
    with __scriptComboBoxes[i] do
    begin
      setParent(mainForm);
      setLeft(cmpLeft);
      setTop(top);
      setWidth(cmpWidth);
      setCaption(playerForm.comboBoxDefaults[i]);

      for j := 0 to high(playerForm.comboBoxItems[i]) do
        addItem(playerForm.comboBoxItems[i][j], nil);
    end;

    __scriptComboLabels[i].init(mainForm);
    with __scriptComboLabels[i] do
    begin
      setParent(mainForm);
      setTop(top + 3);
      setLeft(lblLeft);
      setWidth(lblWidth);
      setCaption(playerForm.comboBoxLabels[i]);
    end;

    if (first) then
    begin
      first := false;
      topInc := topInc - 10;
    end;

    insert(cmpLeft + cmpWidth, frmWidth);
    top := top + topInc;
  end;

  // TCheckBoxes
  setLength(__scriptCheckBoxes, length(playerForm.checkBoxLabels));
  setLength(__scriptCheckLabels, length(__scriptCheckBoxes));
  for i := 0 to high(playerForm.checkBoxLabels) do
  begin
    if (first) then
      top := 10;

    __scriptCheckBoxes[i].init(mainForm);
    with __scriptCheckBoxes[i] do
    begin
      setParent(mainForm);
      setLeft(cmpLeft);
      setTop(top + 1);
      setWidth(cmpWidth);

      if (lowercase(playerForm.checkBoxDefaults[i]) = 'true') then
       setState(cbChecked);
    end;

    __scriptCheckLabels[i].init(mainForm);
    with __scriptCheckLabels[i] do
    begin
      setParent(mainForm);
      setTop(top + 3);
      setLeft(lblLeft);
      setWidth(lblWidth);
      setCaption(playerForm.checkBoxLabels[i]);
    end;

    if (first) then
    begin
      first := false;
      topInc := topInc - 10;
    end;

    insert(lblLeft + 10, frmWidth);
    top := top + topInc;
  end;

  // other, non customizable components
  mainForm.setHeight(max(350, top + 5));
  mainForm.setWidth(maxA(frmWidth) + 10);
  btnStart.setBounds(btnStart.getLeft(), (mainForm.getHeight() - 8) - btnStart.getHeight(), btnStart.getWidth(), btnStart.getHeight());

  __btnHelp.init(mainForm);
  with (__btnHelp) do
  begin
    setParent(mainForm);
    setBounds(btnStart.getLeft(), btnStart.getTop() - 35, btnStart.getWidth() div 2 - 3, btnStart.getHeight());
    setCaption('Help');
    setOnClick(__OnNotifyEvent);
  end;

  __btnSave.init(mainForm);
  with (__btnSave) do
  begin
    setParent(mainForm);
    setBounds(btnStart.getLeft() + __btnHelp.getWidth() + 3, btnStart.getTop() - 35, btnStart.getWidth() div 2, btnStart.getHeight());
    setCaption('Save Settings');
    setOnClick(__OnNotifyEvent);
  end;



  __debugGroupBox.init(mainForm);
  with (__debugGroupBox) do
  begin
    setParent(mainForm);
    setBounds(groupBox.getLeft(), groupBox.getTop() + groupBox.getHeight() + 3, groupBox.getLeft() + groupBox.getWidth() - 9, __btnSave.getTop() - (groupBox.getTop() + groupBox.getHeight()) - 11);
    setCaption('Debug');
  end;
  __lbDebug.init(mainForm);
  with (__lbDebug) do
  begin
    setParent(__debugGroupBox);
    setBounds(6, 3, __debugGroupBox.getWidth() - 16, __debugGroupBox.getHeight() - 28);
  end;
  end;
end;

procedure __onPlayerSelect(sender: TObject; index: Integer); native;
var
  s: string;
  i, count: integer;
begin
  with (playerForm) do
  begin
    if (maxPlayers > 0) then
    begin
      for i := 0 to (clbPlayers.getItems().getCount() - 1) do
        if (clbPlayers.getChecked(i)) then
          inc(count);

      if (count > maxPlayers) then
      begin
        if (assigned(@debug)) then
          debug(format('Unable to select player, max player limit reached (%d)', [maxPlayers]));

        clbPlayers.setChecked(index, false);
      end;
    end;

    if (assigned(@debug)) then
     begin
       s := clbPlayers.getItems().getStrings(index);
       if (clbPlayers.getChecked(index)) then
         debug(format('Player "%s" was selected', [copy(s, 0, Pos('(', s) - 3)]))
       else
         debug(format('Player "%s" un-selected', [copy(s, 0, Pos('(', s) - 3)]))
     end;
  end;
end;

(*
showForm
~~~~~~~~

.. code-block:: pascal

    procedure showForm(); native;

Shows the player form.

.. note::

    - by Coh3n
    - Last Updated: 10 January 2014 by Coh3n

*)
procedure __showForm(); native;
begin
  __TPlayerForm_LoadBitmaps();

  with (playerForm) do
  begin
    mainForm.init(nil);
    with (mainForm) do
    begin
      setWidth(248);
      setHeight(249);
      setPosition(poScreenCenter);
      setShowHint(true);
      setCaption('Player Form');
      setBorderStyle(bsSingle);
    end;

    groupBox.init(mainForm);
    with (groupBox) do
    begin
      setParent(mainForm);
      setBounds(9, 4, 230, 200);
      setCaption('Players');
      setShowHint(true);
    end;

    editArmyName.init(mainForm);
    with (editArmyName) do
    begin
      setParent(groupBox);
      setBounds(6, 5, 130, 20);
      setCaption('default');
      setOnChange(__TPlayerForm_CheckArmyExists);
    end;

    btnLoadArmy.init(mainForm);
    with (btnLoadArmy) do
    begin
      setParent(groupBox);
      setBounds(141, 4, 80, 25);
      setCaption('Load');
      setOnClick(__TPlayerForm_OnNotifyEvent);
      setGlyph(__bmps[BTN_BMP_CROSS]);
    end;

    clbPlayers.init(groupBox);
    with (clbPlayers) do
    begin
      setParent(groupBox);
      setBounds(6, 35, 214, 140);
      setOnItemClick(__onPlayerSelect);
    end;

    btnStart.init(mainForm);
    with (btnStart) do
    begin
      setParent(mainForm);
      setBounds(8, 211, 232, 30);
      setCaption('Start Script');
      setOnClick(__TPlayerForm_OnNotifyEvent);
    end;

    if (@SRL_Events[EVENT_PLAYERFORM_CREATE] <> nil) then
      SRL_Events[EVENT_PLAYERFORM_CREATE]();

    if (Rafiki_FindArmy(editArmyName.getCaption())) then
    begin
      btnLoadArmy.setGlyph(__bmps[BTN_BMP_TICK]);
      __TPlayerForm_LoadArmy(editArmyName.getCaption());
    end;
  end;


  try
    playerForm.mainForm.showModal();
  except
    client.writeln('Error in playerform; ShowModal failed');
  finally
    if (playerForm.mainForm <> nil) then
      playerForm.mainForm.free();

    __TPlayerForm_FreeBitmaps();
  end;
end;


(*
runPlayerForm
~~~~~~~~~~~~~

.. code-block:: pascal

    procedure runPlayerForm();

The function to be called by scripters when they want to open the player form.

.. note::

    - by Coh3n
    - Last Updated: 10 January 2014 by Coh3n

*)
procedure runPlayerForm();
begin
  with (playerForm) do
    if (length(editBoxLabels) > 0) or (length(checkBoxLabels) > 0) or (length(comboBoxLabels) > 0) then
      SRL_Events[EVENT_PLAYERFORM_CREATE] := @__createScriptComponents;

  sync(__showForm);
end;
