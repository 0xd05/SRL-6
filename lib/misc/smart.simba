(*
Smart
=====

The Smart file stores all the functions and procedures used to initiate SMART
in scripts.  To use SMART in a script, simply add the following code before SRL is
included.

.. code-block:: pascal

    {$DEFINE SMART}

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/misc/smart.simba>`_.

*)

{$loadlib libsmartremote}

{$include_once ../core/debug.simba}
{$include_once ../tmp.simba}

{$f-}

const
  SMART_URL = 'http://www.runescape.com/game.ws?j=1';

const
  OGL_PLUGIN = 'OpenGL32.dll';

(*
var User Set
~~~~~~~~~~~~

Variables that can be used in scripts.

  * smartClientWidth, smartClientHeight - The dimensions of the smart client
  * smartGetJavaPath - If enabled will attempt to find your java path
  * smartShowConole - If enabled will show the java console else wont.
  * smartForceNewClient - If enabled will skip attempting to pair to a previously spawned client
  * smartEnableDrawing - If enabled will allow drawing on smart.

*)
var
  smartClientWidth = 960;
  smartClientHeight = 640;
  smartGetJavaPath = true;
  smartShowConsole = true;
  smartForceNewClient = false;
  smartEnableDrawing = false;

{*
var Internal
~~~~~~~~~~~~

Internal SMART variables used only in smart.simba.
    ** Target <> PID. PID for identifying smarts. Target for targetting a specific applet and cleaning up.
    * __smartCurrentPid: Keeps track of the current smart PID.
    * __smartCurrentTarget: Keeps track of the current smart target.
    * __smartIsDrawingSetup: Keeps track if smart drawing is setup or not.
    * smartImage: TMufasaBitmap that is displayed onto smart.
*}
  __smartCurrentPid: integer;
  __smartCurrentTarget: integer;
  __smartIsDrawingSetup: boolean;
  smartImage: TMufasaBitmap;

(*
getClientDimensions; override;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure getClientDimensions(var w, h: integer); override;

Overrides GetClientDimensions and sets w and h to the SMART_CLIENT constants.

.. note::

    - By: Olly
    - Last Updated: July 24, 2013 by Olly

Example:

.. code-block:: pascal

    getClientDimensions(w, h);

*)
procedure getClientDimensions(var w, h: integer); override;
begin
  w := smartClientWidth;
  h := smartClientHeight;
end;

(*
findJavaPath
~~~~~~~~~~~~

.. code-block:: pascal

     Function findJavaPath(out res: string): boolean;

Attempts to locate the users java path, will return if succesfull or not

.. note::

    - By: Brandon
    - Last Updated: August 26, 2013 by Olly

Example:

.. code-block:: pascal

   findJavaPath(s);
*)
Function findJavaPath(out res: string): boolean;

   Function GetDirectoryName(Directory, Path: String): String;
   var
    I: Integer;
    Directories: TStringArray;
   Begin
     Directories := GetDirectories(Path);
     For I := 0 To High(Directories) Do
      If ExecRegExpr(Directory, Directories[I]) Then
      Begin
        Result := Directories[I];
        Exit;
      End;
   End;

  Function FindDirectory(Directory, Path: String): Boolean;
  Begin
    Result := Length(GetDirectoryName(Directory, Path)) > 0;
  End;

var
  Drive: String;
  CurrentPath: String;
Begin
  result := false;
  res := '';

  drive := Copy(PluginPath, 0, 3);

  If (FindDirectory('Program\sFiles\s\(x86\)', Drive)) Then
  Begin
    CurrentPath := Drive + 'Program Files (x86)\';
  End Else
    CurrentPath := Drive + 'Program Files\';

  If (FindDirectory('Java|java', CurrentPath + '\')) Then
  Begin
    CurrentPath := CurrentPath + 'Java\';
  End Else
    Begin
      print('Failed To Find Path: ' + CurrentPath + 'Java\', TDebug.ERROR);
      exit;
    End;

  Drive := GetDirectoryName('jre', CurrentPath);

  if (length(drive) > 0) then
  Begin
    If (smartShowConsole) Then
      CurrentPath := CurrentPath + Drive + '\bin\java.exe'
    Else
      CurrentPath := CurrentPath + Drive + '\bin\javaw.exe';
  End Else
    Begin
      Drive := GetDirectoryName('jdk', CurrentPath);

      If (smartShowConsole) Then
        CurrentPath := CurrentPath + Drive + 'jre\bin\java.exe'
      Else
        CurrentPath := CurrentPath + Drive + 'jre\bin\javaw.exe';
    End;

  result := FileExists(CurrentPath);
  res := currentPath;
end;

(*
getJavaPath
~~~~~~~~~~~

.. code-block:: pascal

     function getJavaPath(): string;

Will return the Java path needed for the first parameter of SmartSpawnClient.

.. note::

    - By: Olly
    - Last Updated: August 26, 2013 by Olly

Example:

.. code-block:: pascal

   getJavaPath();
*)
function getJavaPath(): string;
begin
  print('getJavaPath():', TDebug.HEADER);

  if (not smartGetJavaPath) then
  begin
    if (smartShowConsole) then
      result := 'java.exe'
    else
      result := 'javaw.exe';

    print('Not searching for your Java path. Make sure the JRE is in your system''s PATH before JDK (if you have JDK).');
    print('getJavaPath()', TDebug.FOOTER);
    exit();
  end;

  print('Attempting to search for your Java path');

  if (findJavaPath(result)) then
    print('Found your java path @ ' + result)
  else
    print('Failed to find your Java path, add JRE to your system''s PATH before JDK (if you have JDK), and disable smartGetJavaPath', TDebug.FATAL);

  print('getJavaPath()', TDebug.FOOTER);
end;

(*
smartSetDebug; overload
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartSetDebug(enable: boolean); overload;

Overloaded function that toggles the debug image on smart without need the target
parameter.

.. note::

    - By: Olly
    - Last Updated: August 26, 2013 by Olly

Example:

.. code-block:: pascal

   findJavaPath(s);
*)
procedure smartSetDebug(enable: boolean); overload;
begin
  smartSetNativeButton(__smartCurrentTarget, 0, 101, not enable);
end;

(*
smartGetParameters
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function smartGetParameters(out params: array of string): boolean;

Attempts to grab the correct parameters for spawning a SMART client. Results if
succesfull or not.

.. note::

    - By: Brandon, Mormanman, Benland100
    - Last Updated: May. 26, 2013 by Olly

Example:

.. code-block:: pascal

*)
function smartGetParameters(out params: TStringArray): boolean;
var
  page: string;
begin
  page := getPage(SMART_URL);

  params := explode(',', between('<iframe id="game" src="', '"', page));

  result := (length(params) = 2);

  if (not result) then
  begin
    print('Error while grabbing parameters', TDebug.ERROR);
    print('Make sure you can reach the RS website, and no active firewall is blocking Simba', TDebug.HINT);
    exit(false);
  end;

  print('smartGetParameters(): Succesfully grabbed paramters', TDebug.SUB);
end;

(*
smartSetAsTarget
~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function smartSetAsTarget(pid: integer): boolean;

Pairs Simba to the smart client via EIOS.

.. note::

    - By: Olly
    - Last Updated: August 28, 2013 by Olly

Example:

.. code-block:: pascal

*)
function smartSetAsTarget(pid: integer): boolean;
begin
  result := true;

  try
    setEIOSTarget('libsmartremote', intToStr(pid));
    print('smartSetAsTarget(): Succesfully set SMART['+ intToStr(pid) +'] as Simba''s target', TDebug.SUB);
  except
    print('smartSetAsTarget(): Failed to set SMART['+ intToStr(pid) +'] as Simba''s target', TDebug.SUB);
    result := false;
  end;
end;

(*
smartCreateClient
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartCreateClient(w, h: integer);

Creates a smart client using the dimensions "w" and "h".

.. note::

    - By: Olly
    - Last Updated: August 28, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartCreateClient(w, h: integer);
var
  params: TStringArray;
  path: string;
begin
  print('smartCreateClient():', TDebug.HEADER);

  if (not smartGetParameters(params)) then
    print('Failed to grab parameters', TDebug.FATAL);

  print('Using parameters "' + toStr(params) + '"');

  path := getJavaPath();

  __smartCurrentTarget := smartSpawnClient(path, stringReplace(PluginPath, '\', '/', [rfReplaceAll]),
                                           params[0], ',' + params[1], w, h, '', '', '', OGL_PLUGIN);

  if (__smartCurrentTarget <> 0) then
  begin
    print('Succesfully spawned a client, attempting to target');

    __smartCurrentPID := smartGetClientPID(__smartCurrentTarget);

    if (smartSetAsTarget(__smartCurrentPID)) then
    begin
      print('smartCreateClient(): result = true', TDebug.FOOTER);
      exit();
    end;
  end else
    print('Failed to spawn a SMART client', TDebug.FATAL);

end;

(*
smartGetPIDs
~~~~~~~~~~~~

.. code-block:: pascal

     function smartGetPIDs(): TIntegerArray;

Returns all true, non pair PIDs of smart clients.

.. note::

    - By: Olly
    - Last Updated: August 28, 2013 by Olly

Example:

.. code-block:: pascal

*)
function smartGetPIDs(): TIntegerArray;
var
  i, count: Integer;
begin
  count := SmartGetClients(true);
  setLength(result, count);

  if (count > 0) then
    for i := 0 to (count - 1) do
      result[i] := SmartGetAvailablePID(i);
end;

(*
smartPairToExistingClient
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function smartPairToExistingClient(): boolean;

Attempts to pair us to a previously spawned smart client, will result true if
succesfull or not.

.. note::

    - By: Olly
    - Last Updated: August 28, 2013 by Olly

Example:

.. code-block:: pascal

*)
function smartPairToExistingClient(): boolean;
var
  pidArr: TIntegerArray;
  i, t, p: integer;
begin
  result := false;

  print('smartPairToExistingClient():', TDebug.HEADER);

  pidArr := smartGetPIDs();

  if (length(pidArr) < 1) then
  begin
    print('Found no free clients to pair to');
    print('smartPairToExistingClient(): result = false', TDebug.FOOTER);
    exit();
  end;

  print('Found ' + intToStr(length(pidArr)) + ' free client(s), attempting to pair to one...');

  for i := 0 to high(pidArr) do
  begin
    t := 0;
    t := SmartPairClient(pidArr[i]);

    if (t <> 0) then
    begin
       p := pidArr[i];

       result := smartSetAsTarget(p);

       if (result) then
       begin
         __smartCurrentPID := p;
         __smartCurrentTarget := t;

         if (not smartEnabled(__smartCurrentTarget)) then
           smartSetEnabled(__smartCurrentTarget, true);

         print('Succesfully paired to a existing client, SMART['+ intToStr(__smartCurrentPID) +']');
         print('smartPairToExistingClient(): result = true', TDebug.FOOTER);
         exit();
       end;
    end else
      print('Failed to pair to SMART['+ intToStr(pidArr[i]) +']');
  end;

  print('smartPairToExistingClient(): result = false', TDebug.FOOTER);
end;

(*
initSmart
~~~~~~~~~

.. code-block:: pascal

    procedure initSmart();

Initializes us to a SMART client, will attempt to pair to a existing client, if
that fails we will attempt to spawn a client, will terminate the script if anything
goes wrong.

.. note::

    - By: Olly
    - Last Updated: August 26, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure initSmart(forceNew: boolean);
begin
  print('initSmart():', TDebug.HEADER);

  if (not forceNew) then
  begin
    print('Attempting to pair to a previously spawned client');

    if (smartPairToExistingClient()) then
    begin
      print('Succesfully initialized via pairing to a previously spawned client');
      print('initSmart()', TDebug.FOOTER);
      exit();
    end;
  end;

  print('Attempting to spawn a new client..');

  smartCreateClient(smartClientWidth, smartClientHeight);

  print('Succesfully initialized via spawning a new client');

  smartSetDebug(false);
  addOnTerminate('smartFreeCurrentClient');

  print('initSmart()', TDebug.FOOTER);
end;

(*
smartFreeCurrentClient
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartFreeCurrentClient();

Free's our current smart client.

.. note::

    - By: Olly
    - Last Updated: August 28, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartFreeCurrentClient();
begin
  if (__smartCurrentTarget <> 0) then
    smartFreeClient(__smartCurrentTarget);
end;

(*
smartSetupDrawing
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartSetupDrawing();

Setups SMART so its ready to be drawn on-to.

.. note::

    - By: Olly
    - Last Updated: August 28, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartSetupDrawing();
begin
  if (__smartIsDrawingSetup) then
    exit();

  smartSetDebug(true);

  try
    smartImage.init(client.getMBitmaps());
    smartImage.setName('SMART Debug Image');
    smartImage.setPersistentMemory(SmartDebugArray(__smartCurrentTarget), smartClientWidth, smartClientHeight);
    smartImage.drawClear(0);

    print('smartSetupDrawing(): Succesfull setup SMART drawing', TDebug.SUB);
  except
    print('smartSetupDrawing(): Unable to setup SMART drawing', TDebug.FATAL);
  end;

  __smartIsDrawingSetup := true;
  addOnTerminate('smartFreeDrawing');
end;

(*
smartFreeDrawing
~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartFreeDrawing();

Frees the TMufasaBitmap used for smart drawing.

.. note::

    - By: Olly
    - Last Updated: August 28, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartFreeDrawing();
begin
  try
    smartImage.resetPersistentMemory();
    smartImage.free();
  except finally
    __smartIsDrawingSetup := false;
  end;
end;

(*
smartReloadClient
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartReloadClient();

Kills the current client, and spawns a new one.

.. note::

    - By: Olly
    - Last Updated: August 28, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartReloadClient();
var
  img, r: integer;
begin
  print('smartReloadClient()', TDebug.HEADER);
  img := -999;

  if (__smartIsDrawingSetup) then
  begin
    img := copyBitmap(smartImage.getIndex());
    smartFreeDrawing();
  end;

  r := SmartGetRefresh(__smartCurrentTarget);

  smartFreeCurrentClient();
  smartKillClient(__smartCurrentPID);
  initSmart(true);

  print('Restoring refresh rate back to ' + intToStr(r));
  SmartSetRefresh(__smartCurrentTarget, r);

  if (bitmapExists(img)) then
  begin
    smartSetupDrawing();

    print('Re-drawing the smartImage bitmap');

    getMufasaBitmap(img).drawTransparent(0, 0, smartImage);
    freeBitmap(img);
  end;

  print('smartReloadClient()', TDebug.FOOTER);
end;

begin
  // check for the plugin on compile
  if (not fileExists(PluginPath + OGL_PLUGIN)) then
    print('SMART - Unable to find the OpenGL32.dll (plugin reqired for SRL to work with SMART)', TDebug.FATAL);
end;
