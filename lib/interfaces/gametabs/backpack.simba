(*
Backpack
========

The Backpack file holds functions and procedures that are used in the
Runescape Backpack gametab.

*)

{$include_once gametab.simba}
{$include_once ../../items/items.simba}

{$f-}

(*
const Backpack low/high
~~~~~~~~~~~~~~~~~~~~~~~

Integer constants that represent the highest and lowest Backpack slots.

*)
const
  INV_SLOT_LOW = 1;
  INV_SLOT_HIGH = 28;


(*
const Drop Patterns
~~~~~~~~~~~~~~~~~~~

TIntegerArray constants that represent drop patterns.

*)
 {$IFNDEF CODEINSIGHT}

const
  DROP_PATTERN_REGULAR   := TIntegerArray([1..28]);
  DROP_PATTERN_BACKWARDS := TIntegerArray([28..1]);
  DROP_PATTERN_SNAKE     := [1, 2, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12, 16, 15, 14,
                             13, 17, 18, 19, 20, 24, 23, 22, 21, 25, 26, 27, 28];
  DROP_PATTERN_UP_DOWN  := [1, 5, 9, 13, 17, 21, 25, 26, 22, 18, 14, 10, 6, 2,
                             3, 7, 11, 15, 19, 23, 27, 28, 24, 20, 16, 12, 8, 4];
{$ENDIF}
(*
type TRSTabBackpack
~~~~~~~~~~~~~~~~~~~

A type that stores functions and properties of the Runescape Backpack tab.

*)
type
  TRSTabBackpack = record(TRSInterface)
    tabIndex: integer;
    slots: TBoxArray;
    __slots: array [0..1] of TBoxArray;
  end;

(*
var tabBackpack
~~~~~~~~~~~~~~~

Variable that stores functions and properties of the Runescape Backpack tab.

*)
var
  tabBackpack: TRSTabBackpack;

{*
TRSTabBackpack.__init
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSTabBackpack.__init();

Initiates the tabBackpack variable. Called at the end of this file.

.. note::

    - byOlly
    - Last updated: July. 29, 2013 by Olly

Example:

.. code-block:: pascal

    tabBackpack.__init();

*}
procedure TRSTabBackpack.__init();
begin
  with self do
  begin
    name := 'RS Backpack tab';
    ID := ID_INTERFACE_TAB_BACKPACK;
    tabIndex := _TAB_BACKPACK;
    parentID := -1;
    static := true;

    x1 := gameTabs.visibleTabArea.x1;
    y1 := gameTabs.visibleTabArea.y1;
    x2 := gameTabs.visibleTabArea.x2;
    y2 := gameTabs.visibleTabArea.y2;

    w := (x2 - x1);
    h := (y2 - y1);
    cx := self.getCenterPoint().x;
    cy := self.getCenterPoint().y;

    // the slots when other tabs are visable
    __slots[0] := grid(4, 7, 34, 31, 52, 39, point(gameTabs.__visibleTabAreaMulti.x1 + 32,
                       gameTabs.__visibleTabAreaMulti.y1 + 32));

    // the slots when the backpack is the *only* gametab open.
    __slots[1] := grid(4, 7, 34, 31, 52, 39, point(gameTabs.__visibleTabAreaSingle.x1 + 32,
                       gameTabs.__visibleTabAreaSingle.y1 + 32));

  end;
end;

(*
TRSTabBackPack._updateBounds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSTabBackPack._updateBounds();

Updates the bounds and the slots of the TRSTabBackPack.

.. note::

    - byOlly
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

    if (tabBackpack.isOpen()) then
      writeln('the Backpack tab is open');
*)
procedure TRSTabBackPack._updateBounds();
begin
  self.setBounds(gameTabs.visibleTabArea);

  if (self.y1 = gameTabs.__visibleTabAreaMulti.y1) then
    slots := __slots[0]
  else
    slots := __slots[1];
end;

(*
TRSTabBackpack.isOpen
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.open(): boolean;

Returns true if our current tab is the Backpack tab.

.. note::

    - byOlly
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

    if (tabBackpack.isOpen()) then
      writeln('the Backpack tab is open');
*)
function TRSTabBackpack.isOpen(): boolean;
var
  p: TPoint;
  tpa: TPointArray;
  l: integer;
begin
  result := (gameTabs._isTabActive(self.tabIndex));

  if (not result) then   // there maybe a single tab open
    if (gameTabs.visibleTabArea.x1 = gameTabs.__visibleTabAreaSingle.x1) then
      if (gameTabs.findX(p)) then // a single tab is open, lets look for the money sign
      begin
        findColorsTolerance(tpa, 9295862, gameTabs.visibleTabArea.x1+75, gameTabs.visibleTabArea.y1+300,
                                          gameTabs.visibleTabArea.x2-125, gameTabs.visibleTabArea.y2-5, 12);

        l := length(tpa);

        if (l < 1) then
          exit();

        {
          first lets check to see if the yellow on the money sign is in range
          then lets see if the distance from the red cross to the money sign is
          in range.
        }

        if (inRange(l, 30, 40)) then
          result := inRange(distance(p, tpa[0]), 350, 370);
      end;
end;

(*
TRSTabBackpack.open
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.open(): boolean;

Opens the Backpack tab if we're currently not on it.

.. note::

    - byOllybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

    if (tabBackpack.open()) then
      writeln('We opened the Backpack tab');
*)
function TRSTabBackpack.open(): boolean;
begin
  result := self.isOpen();

  if (not result) then
    result := gameTabs._openTab(self.tabIndex);

  if (result) then
    self._updateBounds();
end;

(*
TRSTabBackpack.isSlotVaild
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isSlotVaild(slot: integer): boolean;

Returns true if the vaild (within the range of 1..28).

.. note::

    - byOlly
    - Last Updated: July. 27, 2013

Example:

.. code-block:: pascal

    if (tabBackPack.isSlotValid(25) then
      writeln('Slot 25 is a vaild backpack slot!');

*)
function TRSTabBackpack.isSlotVaild(slot: integer): boolean;
begin
  result := (inRange(slot, INV_SLOT_LOW, INV_SLOT_HIGH));

  if (not result) then
    print('tabBackpack(): The slot "' + intToStr(slot) + '" is an incorrect slot. Use a slot between 1..28', TDebug.ERROR);
end;

(*
TRSTabBackpack.getSlotBox
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.getSlotBox(slot: integer): tbox;

Returns the TBox of the desired backpack slot.

.. note::

    - byOllybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   var
     b: TBox;
   begin
     b := tabBackpack.getSlotBox(1);

*)
function TRSTabBackpack.getSlotBox(slot: integer): TBox;
begin
  if (not self.isSlotVaild(slot)) then
    exit(intToBox(-1, -1, -1, -1));

  // - 1 because the grid (array) starts at 0.
  result := slots[slot - 1];
end;

(*
TRSTabBackpack.isItemInSlot
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isItemInSlot(slot: integer): boolean;

Returns true if an item is in the desired Backpack slot.

.. note::

    - byOllybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   if (tabBackpack.isItemInSlot(1)) then
     writeln('We have an item in slot number 1');

*)
function TRSTabBackpack.isItemInSlot(slot: integer): boolean;
begin
  if (not self.open()) or (not self.isSlotVaild(slot))then
    exit(false);

  result := self.getSlotBox(slot).colorExists(ITEM_OUTLINE_BLACK);
end;

(*
TRSTabBackpack.pointToSlot
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.pointToSlot(p: TPoint): integer;

Returns the backpack slot number in which the TPoint falls within, will return
-1 if the point isn't located in any slots.

.. note::

    - byOlly
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   writeln(tabBackpack.pointToSlot(point(577, 279)))

*)
function TRSTabBackpack.pointToSlot(p: TPoint): integer;
var
  i: integer;
begin
  if (not (pointInBox(p, self.getBounds()))) then
    exit(-1);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if pointInBox(p, self.getSlotBox(i)) then
      exit(i);
end;

(*
TRSTabBackpack.count
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.count(): integer;

Returns how many items are in our Backpack.

.. note::

    - byOllybest
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

   writeln(tabBackpack.count());

*)
function TRSTabBackpack.count(): integer;
var
  i: integer;
begin
  if (not self.open()) then
    exit(0);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if (self.isItemInSlot(i)) then
      inc(result);
end;

(*
TRSTabBackpack.waitCount
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.waitCount(backPackCount: integer; waitTime: integer): boolean;

Waits 'waitTime' for the backPack count to become 'count'.

.. note::

    - byOllybest
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

   if tabBackpack.waitCount(28, 1000 + random(500)) then
     writeln('Backpack count is now 28!');

*)
function TRSTabBackpack.waitCount(backPackCount: integer; waitTime: integer): boolean;
var
  timeOut: integer;
begin
  timeOut := getSystemTime() + waitTime;
  result := false;

  while (timeOut >= getSystemTime()) do
    if (self.count() = backPackCount) then
      exit(true)
    else
      wait(20 + random(50));
end;

(*
TRSTabBackpack.isFull
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isFull: boolean;

Returns true if our Backpack is full.

.. note::

    - byOllybest
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

   if (tabBackpack.isFull) then
     writeln('our Backpack is full!');

*)
function TRSTabBackpack.isFull: boolean;
var
  i: integer;
begin
  if (not self.open()) then
    exit(false);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if (not (self.isItemInSlot(i))) then
      exit(false);

  result := true;
end;

(*
TRSTabBackpack.isEmpty
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isEmpty: boolean;

Returns true if our Backpack is empty.

.. note::

    - byOllybest
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

   if (tabBackpack.isEmpty) then
     writeln('our Backpack is empty!');

*)
function TRSTabBackpack.isEmpty: boolean;
begin
  if (not self.open()) then
    exit(false);

  result := (not (self.getBounds().colorExists(ITEM_OUTLINE_BLACK)));
end;


(*
TRSTabBackpack.waitForShift
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackPack.waitForShift(waitTime: integer): boolean;

Waits up to waitTime for the Backpack count to change.

.. note::

    - byOlly
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

   if tabBackpack.waitForShift(5000) then
     writeln('Backpack has shifted!');

*)
function TRSTabBackPack.waitForShift(waitTime: integer): boolean;
var
  c, timeOut: integer;
begin
  result := false;
  c := self.count();
  timeOut := getSystemTime() + waitTime;

  while (timeOut >= getSystemTime()) do
    if (c <> self.count()) then
      exit(true)
    else
      wait(20 + random(50));
end;

(*
TRSTabBackpack.mouseSlot
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.mouseSlot(slot, mouseAction: integer): boolean;

Moves and performs the desired mouse action at the selected Backpack slot.

.. note::

    - byOllybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   if tabBackpack.mouseSlot(1, MOUSE_MOVE) then
     writeln('We moved the mouse to Backpack slot 1');

*)
function TRSTabBackpack.mouseSlot(slot, mouseAction: integer): boolean;
begin
  if (not self.open()) or (not self.isSlotVaild(slot)) then
    exit(false);

  result := true;
  mouseBox(self.getSlotBox(slot), mouseAction);
end;

(*
TRSTabBackpack.isSlotActivated
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isSlotActivated(slot: integer): boolean;

Will return true if a desired slot is activated.

.. note::

    - byOlly
    - Last Updated: March. 12, 2013

Example:

.. code-block:: pascal

   if tabBackpack.isSlotActivated(28) then
     writeln('Slot 28 is activated.');

*)
function TRSTabBackpack.isSlotActivated(slot: integer): boolean;
begin
  if (not self.open()) or (not self.isSlotVaild(slot)) then
    exit(false);

  result := self.getSlotBox(slot).colorExists(ITEM_OUTLINE_WHITE);
end;

(*
TRSTabBackpack.getActivatedSlot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.getActivatedSlot: integer;

Returns what slot is activated, if none are it will return -1.

.. note::

    - byOlly
    - Last Updated: March. 12, 2013

Example:

.. code-block:: pascal

   var
     i: integer;
   begin
     i := getActivatedSlot;

*)
function TRSTabBackpack.getActivatedSlot: integer;
var
  i: integer;
begin
  if (not self.open()) or (not (self.getBounds().colorExists(ITEM_OUTLINE_WHITE))) then
    exit(- 1);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if self.isSlotActivated(i) then
      exit(i);

  result := - 1;
end;

(*
TRSTabBackpack.dropItems
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSTabBackpack.dropItems(slots: TIntegerArray = [1..28]);

Drops items in the TIntegerArray, the parameter slots its optional if untouched
the procedure will drop all items in slots 1 to 28. Can also be used with
drop patterns.
    * tabBackpack.dropItems(); - would drop items in slots 1..28
    * tabBackpack.dropItems([1, 2, 25, 6]); - would drop items in slots 1, 2, 25 and 6
    * tabBackpack.dropItems(DROP_PATTERN_SNAKE);  - would use the drop pattern "snake"

.. note::

    - byOlly
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

    tabBackpack.dropItems();

*)
procedure TRSTabBackpack.dropItems(slotArr: TIntegerArray = DROP_PATTERN_REGULAR);
var
  r, I, l: integer;
  tia: TIntegerArray;
begin
  if (not self.open()) then
    exit;

  l := length(slotArr);

  if (l < 1) then
  begin
    print('dropItems: You didnt enter any slots to drop.', TDebug.ERROR);
    exit;
  end;

  for i := 0 to (l - 1) do
    if (self.isSlotVaild(slotArr[i])) and (self.isItemInSlot(slotArr[i])) then
    begin
      self.mouseSlot(slotArr[i], MOUSE_RIGHT);
      if chooseOption(['Drop', 'drop', 'rop']) then
      begin
        insert(slotArr[i], tia);
        wait(120 + random(305));
      end;
    end;

  if (length(tia) > 0) then
  begin
    tia.sortQuick;
    print('dropItems: Dropped items in slots ' + toStr(tia));
  end else
    print('dropItems: Failed finding any items to drop');
end;

(*
TRSTabBackpack.countDTM
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.countDTM(dtm: integer): integer;

Searches for the dtm in each Backpack slot and will return how many matches it finds.

.. note::

    - byOlly
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

    var
      dtm: integer;
      i: integer;
    begin
      dtm := dtmFromString('lotsofstuffhere');
      i := tabBackpack.countItemsDTM(dtm);
      writeln('We counted ' + intToStr(i) + ' items in our Backpack.');

*)
function TRSTabBackpack.countDTM(dtm: integer): integer;
var
  i, l: integer;
begin
  result := 0;

  if (not self.open()) then
    exit();

  result := findItem(dtm, self.slots);

  if (result = 0) then
  begin
    print('tabBackpack.countDTM(): Found no DTM matches', TDebug.SUB);
    exit();
  end;

  print('countItemsDTM: Counted ' + intToStr(result) + ' items.');
end;

(*
TRSTabBackpack.clickDTM
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.clickDTM(dtm: integer; clickType: integer; option: string; waitFor: integer = 300): integer;

Searches for the dtm if succesful will perform what action is it set.
Will return how many items were clicked.
  * clicktype - (MOUSE_MOVE, MOUSE_LEFT, MOUSE_RIGHT)
  * option    - What option to choose. If not using MOUSE_RIGHT can be left blank.
  * waitFor   - This is how long we will wait after interacting with the item, for
                different things you may need different speeds.

.. note::

    - byOlly
    - Last Updated: July. 29, 2013

Example:

.. code-block:: pascal

    //  would search for one dtm and click the item.
    tabBackpack.clickDTM(dtm, MOUSE_MOVE, '');

    //  would search for multiple dtms and a 1000ms wait after burying the item.
    tabBackpack.clickDTM(dtm, MOUSE_RIGHT, 'bury', 1000);

*)
function TRSTabBackpack.clickDTM(dtm: integer; clickType: integer; option: string; waitFor: integer = 300): integer;
var
  i, l: integer;
  arr: TIntegerArray;
begin
  if (not self.open()) then
    exit(0);

  arr := findItem(dtm, self.slots, true);

  l := length(arr);

  if (l < 1) then
  begin
    print('tabBackpack.clickDTM(): Found no dtm matches', TDebug.SUB);
    exit();
  end;

  for i := 0 to (l-1) do
  begin
    self.mouseSlot(i+1, clickType);

    if (clickType = MOUSE_RIGHT) and (option <> '') then
      chooseOption([option], 200);

    inc(result);
    wait(waitFor + random(50));
  end;

  print('clickItemsDTM: clicked ' + intToStr(result) + ' items.');
end;

(*
TRSTabBackpack.dragSlot
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function TRSTabBackpack.dragSlot(fromSlot, toSlot: integer): boolean;

.. note::

    - byOlly
    - Last Updated: April. 25, 2013

Example:

.. code-block:: pascal

    tabBackpack.dragSlot(1, 28);

*)
function TRSTabBackpack.dragSlot(fromSlot, toSlot: integer): boolean;
var
  p: TPoint;
begin
  if self.isItemInSlot(fromSlot) then
  begin
    mouseSlot(fromSlot, MOUSE_MOVE);
    gaussBox(p, self.getSlotBox(toSlot));

    dragMouse(p);
    result := true;
  end else
    print('There is no item to drag in slot ' + intToStr(fromSlot), TDebug.ERROR);
end;

begin
  tabBackpack.__init();
end;
