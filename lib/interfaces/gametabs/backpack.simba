(*
Backpack
========

The Backpack file holds functions and procedures that are used in the
Runescape Backpack gametab.

*)

{$include_once gametab.simba}
{$include_once ../../items/items.simba}

{$f-}

(*
const Backpack low/high
~~~~~~~~~~~~~~~~~~~~~~~

Integer constants that represent the highest and lowest Backpack slots.

*)
const
  INV_SLOT_LOW = 1;
  INV_SLOT_HIGH = 28;


(*
const Drop Patterns
~~~~~~~~~~~~~~~~~~~

TIntegerArray constants that represent drop patterns.

*)
const
  DROP_PATTERN_REGULAR   := TIntegerArray([1..28]);
  DROP_PATTERN_BACKWARDS := TIntegerArray([28..1]);
  DROP_PATTERN_SNAKE     := [1, 2, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12, 16, 15, 14,
                             13, 17, 18, 19, 20, 24, 23, 22, 21, 25, 26, 27, 28];
  DROP_PATTERN_UP_DOWN   := [1, 5, 9, 13, 17, 21, 25, 26, 22, 18, 14, 10, 6, 2,
                             3, 7, 11, 15, 19, 23, 27, 28, 24, 20, 16, 12, 8, 4];

(*
type TRSTabBackpack
~~~~~~~~~~~~~~~~~~~

A type that stores functions and properties of the Runescape Backpack tab.

*)
type
  TRSTabBackpack = record(TRSInterface)
    tabIndex: integer;
    slots: TBoxArray;
  end;

(*
var tabBackpack
~~~~~~~~~~~~~~~

Variable that stores functions and properties of the Runescape Backpack tab.

*)
var
  tabBackpack: TRSTabBackpack;

{*
TRSTabBackpack.__init
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSTabBackpack.__init();

Initiates the tabBackpack variable. Called at the end of this file.

.. note::

    - by Ollybest
    - Last updated: Mar. 15, 2013 by Ollybest

Example:

.. code-block:: pascal

    tabBackpack.__init();

*}
procedure TRSTabBackpack.__init();
begin
  with (self) do
  begin
    name := 'RS Backpack tab';
    ID := ID_INTERFACE_TAB_BACKPACK;
    tabIndex := _TAB_BACKPACK;
    parentID := -1;
    static := true;

    {x1 := _gameTabArea.x1;
    y1 := _gameTabArea.y1;
    x2 := _gameTabArea.x2;
    y2 := _gameTabArea.y2; }

    w := (x2 - x1);
    h := (y2 - y1);
    cx := self.getCenterPoint().x;
    cy := self.getCenterPoint().y;

   // slots := grid(4, 7, 34, 31, 52, 39, point(_gameTabArea.x1 + 32, _gameTabArea.y1 + 68));
  end;
end;

(*
TRSTabBackpack.isOpen
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.open(): boolean;

Returns true if our current tab is the Backpack tab.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

    if (tabBackpack.isOpen()) then
      writeln('the Backpack tab is open');
*)
function TRSTabBackpack.isOpen(): boolean;
begin
  result := true;
  // result := (getCurrentTab() = self.tabIndex);
end;

(*
TRSTabBackpack.open()
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.open(): boolean;

Opens the Backpack tab if we're currently not on it.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

    if (tabBackpack.open()) then
      writeln('We opened the Backpack tab');
*)
function TRSTabBackpack.open(): boolean;
begin
  result := self.isOpen();

//  if (not (result)) then
//    result := _openGameTab(self.tabIndex);
end;

(*
TRSTabBackpack.invaildSlot
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.invaildSlot(slot: integer): boolean;

Returns if the desired slot is not vaild.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

    if (tabBackpack.invaildSlot(35)) then
      writeln('WARNING: slot 35 is invaild');
*)
function TRSTabBackpack.invaildSlot(slot: integer): boolean;
begin
  result := (not (inRange(slot, INV_SLOT_LOW, INV_SLOT_HIGH)));

  if (result) then
    print('The slot "' + intToStr(slot) + '" is an incorrect slot!', TDebug.ERROR);
end;

(*
TRSTabBackpack.getSlotBox
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.getSlotBox(slot: integer): tbox;

Returns the tbox of the desired Backpack slot.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   var
     b: tbox;
   begin
     b := tabBackpack.getSlotBox(1);

*)
function TRSTabBackpack.getSlotBox(slot: integer): tbox;
begin
  if (self.invaildSlot(slot)) then
    exit(intToBox(-1, -1, -1, -1));

  // - 1 because the grid (array) starts at 0.
  result := slots[slot - 1];
end;

(*
TRSTabBackpack.isItemInSlot
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isItemInSlot(slot: integer): boolean;

Returns true if an item is in the desired Backpack slot.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   if (tabBackpack.isItemInSlot(1)) then
     writeln('We have an item in slot number 1');

*)
function TRSTabBackpack.isItemInSlot(slot: integer): boolean;
begin
  if (not self.open()) or (self.invaildSlot(slot))then
    exit(false);

  result := self.getSlotBox(slot).colorExists(ITEM_OUTLINE_BLACK);
end;

(*
TRSTabBackpack.pointToSlot
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.pointToSlot(p: TPoint): integer;

Returns the Backpack slot number in which the TPoint falls within.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   writeln(tabBackpack.pointToSlot(point(577, 279)))

*)
function TRSTabBackpack.pointToSlot(p: TPoint): integer;
var
  i: integer;
begin
  if (not (pointInBox(p, self.getBounds()))) then
    exit(0);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if pointInBox(p, self.getSlotBox(i)) then
      exit(i);
end;

(*
TRSTabBackpack.getInvCount
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.getInvCount: integer;

Returns how many items are in our Backpack.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   writeln(tabBackpack.getInvCount);

*)
function TRSTabBackpack.getInvCount: integer;
var
  i: integer;
begin
  if (not self.open()) then
    exit(-1);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if (self.isItemInSlot(i)) then
      inc(result);
end;

(*
TRSTabBackpack.isInvCount
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isInvCount(count: integer; waitTime: integer = 0): boolean;

Returns true if our Backpack count is "count", also includes an optional waitTime
parameter useful for waiting for a set Backpack count.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   if tabBackpack.isInvCount(10) then
     writeln('we have 10 items in our Backpack.');

*)
function TRSTabBackpack.isInvCount(count: integer; waitTime: integer = 0): boolean;
var
  t: integer;
begin
  t := getSystemTime() + waitTime;

  if (self.invaildSlot(count)) then
    exit(false);

  repeat
    if (self.GetInvCount() = count) then
      exit(true);
  until (getSystemTime() >= t);
end;

(*
TRSTabBackpack.isInvFull
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isInvFull: boolean;

Returns true if our Backpack is full.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   if tabBackpack.isInvFull then
     writeln('our Backpack is full!');

*)
function TRSTabBackpack.isInvFull: boolean;
var
  i: integer;
begin
  if (not self.open()) then
    exit(false);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if (not (self.isItemInSlot(i))) then
      exit(false);

  result := true;
end;

(*
TRSTabBackpack.isInvEmpty
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isInvEmpty: boolean;

Returns true if our Backpack is empty.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   if tabBackpack.isInvEmpty then
     writeln('our Backpack is empty!');

*)
function TRSTabBackpack.isInvEmpty: boolean;
begin
  if (not self.open()) then
    exit(false);

  result := (not (self.getBounds().colorExists(ITEM_OUTLINE_BLACK)));
end;

(*
TRSTabBackpack.mouseSlot
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.mouseInvSlot(slot, button: integer): boolean;

Moves and performs the desired mouse action at the selected Backpack slot.

.. note::

    - by Ollybest
    - Last Updated: March. 11, 2013

Example:

.. code-block:: pascal

   if tabBackpack.mouseSlot(1, MOUSE_MOVE) then
     writeln('We moved the mouse to Backpack slot 1');

*)
function TRSTabBackpack.mouseSlot(slot, mouseAction: integer): boolean;
begin
  if (not self.open()) or (self.invaildSlot(slot)) then
    exit(false);

  result := true;
  mouseBox(self.getSlotBox(slot), mouseAction);
end;

(*
TRSTabBackpack.isSlotActivated
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.isSlotActivated(slot: integer): boolean;

Will return true if a desired slot is activated.

.. note::

    - by Ollybest
    - Last Updated: March. 12, 2013

Example:

.. code-block:: pascal

   if tabBackpack.isSlotActivated(28) then
     writeln('Slot 28 is activated.');

*)
function TRSTabBackpack.isSlotActivated(slot: integer): boolean;
begin
  if (not self.open()) or (self.invaildSlot(slot)) then
    exit(false);

  result := self.getSlotBox(slot).colorExists(ITEM_OUTLINE_WHITE);
end;

(*
TRSTabBackpack.getActivatedSlot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.getActivatedSlot: integer;

Returns what slot is activated, if none are it will return -1.

.. note::

    - by Ollybest
    - Last Updated: March. 12, 2013

Example:

.. code-block:: pascal

   var
     i: integer;
   begin
     i := getActivatedSlot;

*)
function TRSTabBackpack.getActivatedSlot: integer;
var
  i: integer;
begin
  if (not self.open()) or (not (self.getBounds().colorExists(ITEM_OUTLINE_WHITE))) then
    exit(- 1);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if self.isSlotActivated(i) then
      exit(i);

  result := - 1;
end;

(*
TRSTabBackpack.dropItems
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSTabBackpack.dropItems(slots: TIntegerArray = [1..28]);

Drops items in the TIntegerArray, the parameter slots its optional if untouched
the procedure will drop all items in slots 1 to 28. Can also be used with
drop patterns.
    * tabBackpack.dropItems(); - would drop items in slots 1..28
    * tabBackpack.dropItems([1, 2, 25, 6]); - would drop items in slots 1, 2, 25 and 6
    * tabBackpack.dropItems(DROP_PATTERN_SNAKE);  - would use the drop pattern "snake"

.. note::

    - by Ollybest
    - Last Updated: March. 12, 2013

Example:

.. code-block:: pascal

    tabBackpack.dropItems();

*)
procedure TRSTabBackpack.dropItems(slotArr: TIntegerArray = DROP_PATTERN_REGULAR);
var
  l := length(slots);
  r, I : Integer;
  tia: TIntegerArray;
begin
  if (not self.open()) then
    exit;

  if (l < 1) then
  begin
    print('dropItems: You didnt enter any slots to drop.', TDebug.ERROR);
    exit;
  end;

  // small chance of mixing some slots up
  if (random(10) = 5) then
    if (l = INV_SLOT_HIGH) then
      for r := 0 to (l - 4) do
        swap(slotArr[randomRange(r - 1, r + 4)], slotArr[randomRange(r - 1, r + 4)]);

  for i := 1 to (l - 1) do
    if (not (self.invaildSlot(slotArr[i]))) then
      if self.isItemInSlot(slotArr[i]) then
      begin
        self.mouseSlot(slotArr[i], MOUSE_RIGHT);
        if chooseOption(['Drop', 'drop', 'rop']) then
        begin
          insert(slotArr[i], tia);
          wait(120 + random(305));
        end;
      end;

  if (length(tia) > 0) then
  begin
    tia.sortQuick;
    print('dropItems: Dropped items in slots ' + toStr(tia));
  end else
    print('dropItems: Failed finding any items to drop');
end;

(*
TRSTabBackpack.dropItemInSlot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.dropItemInSlot(slot: integer): boolean;

Attempts to drop the item in the desired slot

.. note::

    - by Ollybest
    - Last Updated: April. 25, 2013

Example:

.. code-block:: pascal

    if tabBackpack.dropItemInSlot(1) then
      writeln('dropped item in slot 1');

*)
function TRSTabBackpack.dropItemInSlot(slot: integer): boolean;
begin
  if self.isItemInSlot(slot) then
    if self.mouseSlot(slot, MOUSE_RIGHT) then
      result := chooseOption(['Drop', 'drop', 'rop']);

  if (result) then
  begin
    wait(95 + random(280));
    print('Dropped item in slot ' + intToStr(slot));
  end else
    print('Failed to drop item in slot ' + intToStr(slot));
end;

(*
TRSTabBackpack.countItemsDTM
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.countItemsDTM(dtm: integer): integer;

Searches for the dtm in each Backpack slot and will return how many matches it finds.

.. note::

    - by Ollybest
    - Last Updated: March. 12, 2013

Example:

.. code-block:: pascal

    var
      dtm: integer;
      i: integer;
    begin
      dtm := dtmFromString('lotsofstuffhere');
      i := tabBackpack.countItemsDTM(dtm);
      writeln('We counted ' + intToStr(i) + ' items in our Backpack.');

*)
function TRSTabBackpack.countItemsDTM(dtm: integer): integer;
var
  i: integer;
begin
  if (not self.open()) then
    exit(-1);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if self.getSlotBox(i).dtmExists(dtm) then
      inc(result);

  print('countItemsDTM: counted ' + intToStr(result) + ' items.');
end;

(*
TRSTabBackpack.clickItemsDTM
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSTabBackpack.clickItemsDTM(dtms: TIntegerArray; clicktype: integer; option: string; waitFor: integer = 300): integer;

Searches for the dtm if succesful will perform what action is it set.
Will return how many items were clicked.
  * clicktype - (MOUSE_MOVE, MOUSE_LEFT, MOUSE_RIGHT)
  * option    - What option to choose. If not using MOUSE_RIGHT can be left blank.
  * waitFor   - This is optional and on default is set to 300ms, depending on what
                your doing you may need shorter or longer waitFor.

.. note::

    - by Ollybest
    - Last Updated: March. 12, 2013

Example:

.. code-block:: pascal

    //  would search for one dtm and click the item.
    tabBackpack.clickitemsDTM(dtm, MOUSE_MOVE, '');

    //  would search for multiple dtms and a 1000ms wait after burying the item.
    tabBackpack.clickItemsDTM(dtm, MOUSE_RIGHT, 'bury', 1000);

*)
function TRSTabBackpack.clickItemsDTM(dtm: integer; clickType: integer; option: string; waitFor: integer = 300): integer;
var
  i: integer;
begin
  if (not self.open()) then
    exit(-1);

  for i := INV_SLOT_LOW to INV_SLOT_HIGH do
    if self.getSlotBox(i).dtmExists(dtm) then
    begin
      self.mouseSlot(i, clickType);
      if (clickType = MOUSE_RIGHT) and (option <> '') then
        chooseOption([option], 200);

      inc(result);
      wait(waitFor + random(100));
    end;

  print('clickItemsDTM: clicked ' + intToStr(result) + ' items.');
end;

(*
TRSTabBackpack.dragSlot
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function TRSTabBackpack.dragSlot(fromSlot, toSlot: integer): boolean;

.. note::

    - by Ollybest
    - Last Updated: April. 25, 2013

Example:

.. code-block:: pascal

    tabBackpack.dragSlot(1, 28);

*)
function TRSTabBackpack.dragSlot(fromSlot, toSlot: integer): boolean;
var
  p: TPoint;
begin
  if self.isItemInSlot(fromSlot) then
  begin
    mouseSlot(fromSlot, MOUSE_MOVE);
    gaussBox(p, self.getSlotBox(toSlot));

    dragMouse(p);
    result := true;
  end else
    print('There is no item to drag in slot ' + intToStr(fromSlot), TDebug.ERROR);
end;

begin
  tabBackpack.__init();
end;
