(*
Actionbar
=========

The actionbar file holds functions and procedures that are used in the
Runescape Action Bar.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/actionbar.simba>`_.

*)

{$include_once interfaces.simba}
{$include_once ../core/text.simba}
{$include_once gametabs/backpack.simba}

{$f-}

(*
type TRSActionBar
~~~~~~~~~~~~~~~~~

A type that stores functions and properties of the Runescape Action Bar.

Example

.. code-block:: pascal

    actionBar.open();
*)
type
  TRSActionBar = record(TRSInterface)
    {$IFNDEF CODEINSIGHT}
    __slots: TBoxArray;
    {$ENDIF}
    setSlots: boolean;
  end;

(*
var actionBar
~~~~~~~~~~~~~

Variable that stores functions and properties of the Runescape Action Bar.

Example

.. code-block:: pascal

    actionBar.close();
*)
var
  actionBar: TRSActionBar;

(*
const Action Bar Slots
~~~~~~~~~~~~~~~~~~~~~~

Variable that stores functions and properties of the Runescape Action Bar.

Example

.. code-block:: pascal

    actionBar.isSlotEmpty(ACTION_BAR_SLOT_LOW);
*)
const
  ACTION_BAR_SLOT_LOW = 1;
  ACTION_BAR_SLOT_HIGH = 14;

{*
TRSActionBar.__init
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSActionBar.__init();

Initiates the actionBar variable. Called at the end of this file.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    actionBar.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSActionBar.__init();
begin

  with (self) do
  begin
    name := 'RS Action Bar';
    ID := ID_INTERFACE_ACTION_BAR;
    parentID := ID_INTERFACE_MAINSCREEN;
    static := false;
    setSlots := false;
  end;
end;
{$ENDIF}

{*
function TRSActionBar.__find()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.__find(): boolean;

Returns true if the action bar is found.  Sets its coordinates in the process.

.. note::

    - by Olly
    - Last Updated: 24 November 2013 by Coh3n

Example:

.. code-block:: pascal

    if (not actionbar.__find()) then
      writeln('Failed to find the actionbar');
*}
{$IFNDEF CODEINSIGHT}
function TRSActionBar.__find(): boolean;
const
  TOP_HALF = 10328208;
  BOTTOM_HALF = 11052187;
  BUTTON_LENGTH = 9;
  BORDER_COLOR = 3945514;
  OFFSET_Y = 10;
var
  i, c, j, topY, bottomY: integer;
  tpa: TPointArray;
  atpa: T2DPointArray;
  p: TPoint;
  b: TBox;
begin
  result := false;

  if (not findColorsTolerance(tpa, TOP_HALF, 0, 0, gameTabs.tabArea.x1, getClientBounds().y2, 10)) then
  begin
    print('TRSActionBar.__find(): Failed to find action bar color', TDebug.ERROR);
    exit();
  end;

  topY := -1;
  bottomY := -1;

  atpa := clusterTPAEx(tpa, 3, 3);

  for i := 0 to high(atpa) do
    if (length(atpa[i]) = BUTTON_LENGTH) then
    begin
      c := 0;

      for j := 0 to high(atpa[i]) do
        if (getColor(atpa[i][j].x, atpa[i][j].y+1) = BOTTOM_HALF) then
          inc(c);

      if (c = BUTTON_LENGTH) then
      begin
        topY := (atpa[i][0].y - OFFSET_Y);
        break();
      end;
    end;

  if (topY > -1) then
  begin
    p := middleTPA(atpa[i]);

    for i := p.y to (p.y + 100) do
      if (getColor(p.x, i) = BORDER_COLOR) then
      begin
        bottomY := i;
        break();
      end;

    self.setBounds([1, topY, gameTabs.tabArea.x1, bottomY]);

    if (not self.setSlots) then
    begin
      __slots := grid(14, 1, 29, 29, 36, 0, point(self.x1 + 66, self.y1 + 53));

      self.__slots[high(self.__slots)-1].offset([18, 0]);
      self.__slots[high(self.__slots)].offset([18, 0]);
      setSlots := true;
    end;

    print('Found and set actionbar bounds @ '+toStr(self.getBounds()), TDebug.SUB);
    result := true;
  end;
end;
{$ENDIF}

{*
TRSActionBar.__isSlotValid
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.__isSlotValid(var slot: integer): boolean;

Returns true if the 'slot' is valid.

.. note::

    - by euphemism
    - Last Updated: 15 September 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.__isSlotValid(5)) then
      actionBar.clickSlot(5);
*}
{$IFNDEF CODEINSIGHT}
function TRSActionBar.__isSlotValid(var slot: integer): boolean;
begin

  if (inRange(slot, ACTION_BAR_SLOT_LOW, ACTION_BAR_SLOT_HIGH)) then
    exit(true);

  print('Specified Action Bar slot not in the range of 1 - ' + toStr(length(self.__slots)) + '.', TDebug.ERROR);

  slot := 1;
  result := false;
end;
{$ENDIF}

{*
TRSActionBar.__printWarning
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.__printWarning(methodName, resultValue: variant): variant;

Prints an action bar specific warning.

.. note::

    - by euphemism
    - Last Updated: 15 September 2013 by euphemism

Example:

.. code-block:: pascal

    actionBar.__printWarning('switchToBar', -1);
*}
{$IFNDEF CODEINSIGHT}
function TRSActionBar.__printWarning(methodName, resultValue: variant): variant;
begin

  print(methodName + ' will now exit, returning ' + toStr(resultValue) + '.', TDebug.WARNING);
  exit(resultValue);
end;
{$ENDIF}

(*
TRSActionBar.getCurrentBar
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.getCurrentBar(): Integer;

Returns the number of the Action Bar setup currently displayed.  (Members can
have up to five different Action Bar setups).

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if ((actionBar.getCurrentBar()) = 1) then
      writeln('The first Action Bar setup is currently displayed.');
*)
function TRSActionBar.getCurrentBar(): Integer;
begin

  result := strToIntDef(getTextAtEx(intToBox(self.getBounds().x1 + 25,
   self.getBounds().y1 + 49, self.getBounds().x1 + 35, self.getBounds().y1 + 59),
    0, 0, 0, 3111603, 0, 'UpChars'), -1); //Color is of the number showing which bar is active.
  print('actionBar.getCurrentBar() returned ' + toStr(result), TDebug.LOG);
end;

(*
TRSActionBar.switchToBar
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.switchToBar(barNumber: integer; useBindKey: boolean = false): boolean;

Switches to the specified action bar setup.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.switchToBar(barNumber)) then
      writeln('Switched to '+toStr(barNumber));
*)
function TRSActionBar.switchToBar(barNumber: integer; useBindKey: boolean = false): boolean;
var

  currentBar, r, i, diff: integer;
  timeMarker: TTimeMarker;
  keys: tIntegerArray;
begin
  result := false;

  if (not inRange(barNumber, 1, 5)) then
  begin
    print('actionBar.switchToBar: barNumber must be within 1-5.', TDebug.ERROR);
    exit;
  end;

  currentBar:= self.getCurrentBar();

  if (barNumber = currentBar) then
    exit(true);

  if (useBindKey) then
  begin

    keys:= [VK_LSHIFT, VK_0 + barNumber];

    for i := 0 to 1 do
    begin

      keyDown(keys[i]);
      wait(randomRange(10, 200 - i * 100));
    end;

    r:= random(2);
    keyUp(keys[r]);

    wait(random(60));

    keyUp(keys[abs(r - 1)]);

  end else
  begin

    diff := abs(currentBar - barNumber);

    if (inRange(diff, 2, 3)) then
    begin

      intToBox(self.getBounds().x1 + 25, self.getBounds().y1 + 49,
       self.getBounds().x1 + 35, self.getBounds().y1 + 59).mouse(MOUSE_RIGHT);
      chooseOption.select([intToStr(barNumber)], 618);
    end else
    begin

      if ((currentBar < barNumber) xor (diff > 2)) then
        intToBox(self.getBounds().x1 + 39, self.getBounds().y1 + 50,
         self.getBounds().x1 + 43, self.getBounds().y1 + 57).mouse(MOUSE_LEFT)
      else
        intToBox(self.getBounds().x1 + 16, self.getBounds().y1 + 50,
         self.getBounds().x1 + 20, self.getBounds().y1 + 57).mouse(MOUSE_LEFT);
    end;
  end;

  timeMarker.start();

  while (timeMarker.getTime() < randomRange(3000, 4000)) do
  begin

    result := (barNumber = self.getCurrentBar());

    if (result) then
      exit;
  end;
end;

(*
TRSActionBar.isSlotEmpty
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.isSlotEmpty(slot: integer): boolean;

Returns true if the specified Action Bar slot is empty.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.isSlotEmpty(1)) then
      writeln('The first Action Bar slot is empty.');
*)
function TRSActionBar.isSlotEmpty(slot: integer): boolean;
begin

  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.isSlotEmpty()', false));

  result := (getColor(self.__slots[slot - 1].getMiddle().x,
   self.__slots[slot - 1].getMiddle().y) = 60); //Color is of the dark red X present in the center of an empty slot.
end;

(*
TRSActionBar.isEmpty
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.isEmpty(): boolean;

Returns true if every slot in the Action Bar is empty.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.isEmpty()) then
      writeln('Every slot in the Action Bar is empty!');
*)
function TRSActionBar.isEmpty(): boolean;
var

  i: integer;
begin

  result := false;

  for i := ACTION_BAR_SLOT_LOW to ACTION_BAR_SLOT_HIGH do
    if (not self.isSlotEmpty(i)) then
      exit;

  result := true;
end;

(*
TRSActionBar.getSlotBox
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.getSlotBox(slot: integer): TBox;

Returns a TBox of the slot, 'slot'.

.. note::

    - by Olly
    - Last Updated: 18 September 2013 by Olly

Example:

.. code-block:: pascal

    b := actionBar.getSlotBox(1);
*)
function TRSActionBar.getSlotBox(slot: integer): TBox;
begin
  if (not (self.__isSlotValid(slot))) then
    exit(intToBox(-1, -1, -1, -1));

  result := self.__slots[slot - 1];
end;

(*
TRSActionBar.pointToSlot
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.pointToSlot(const p: TPoint): integer;

Returns the actionbar slot where the TPoint 'p' falls within, if fails to fall
within any will return -1

.. note::

    - by Olly
    - Last Updated: 20 November 2013 by Olly

Example:

.. code-block:: pascal

    b := actionBar.getSlotBox(1);
*)
function TRSActionBar.pointToSlot(const p: TPoint): integer;
var
  i: byte;
begin
  result := -1;

  for i := ACTION_BAR_SLOT_LOW to ACTION_BAR_SLOT_HIGH do
    if (pointInBox(p, self.getSlotBox(i))) then
      exit(i);
end;

(*
TRSActionBar.clickSlot
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.clickSlot(slot: integer; clickType: integer = MOUSE_LEFT): boolean;

Generic function to click a non-empty slot in the Action Bar. Will click what
'clickType' is set to (default set as a left click). Returns true if the slot is
non-empty, false if otherwise.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.clickSlot(1)) then
      writeln('There was something in slot 1 and we clicked it!');
*)
function TRSActionBar.clickSlot(slot: integer; clickType: integer = MOUSE_LEFT): boolean;
begin

  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.clickSlot()', false));

  if (self.isSlotEmpty(slot)) then
    exit(false);

  self.__slots[slot - 1].mouse(clickType);

  result := true;
end;

(*
TRSActionBar.isLocked
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.isLocked(): boolean;

Returns true if the Action Bar is locked.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.isLocked()) then
      writeln('The Action Bar is locked.');
*)
function TRSActionBar.isLocked(): boolean;
const

  SPECIFIC_BLACK_COLOR = 1906964; //Specific point in the space between the shackle/shank of the lock and the lock's body.
var

  color: integer;
begin

  color := getColor(self.getBounds().x1 + 494, self.getBounds().y1 + 63);

  print('actionBar.isLocked() grabbed the color ' + toStr(color) +
   ' and we were looking at a point in the space between where the' +
    ' shackle/shank meets the body of the lock symbol', TDebug.LOG);
  result := (not (color = SPECIFIC_BLACK_COLOR));
end;

{*
TRSActionBar.__toggleLock
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.__toggleLock(lock: boolean): boolean;

Internal function to toggle the lock of the Action Bar.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.__toggleLock(true)) then
      writeln('Successfully locked the Action Bar.');
*}
{$IFNDEF CODEINSIGHT}
function TRSActionBar.__toggleLock(lock: boolean): boolean;
var

  timeMarker: TTimeMarker;
begin

  if (((lock) and (not self.isLocked())) or ((not lock) and (self.isLocked()))) then //Lape currently does weird things with xor
  begin

    intToBox(self.getBounds().x1 + 486, self.getBounds().y1 + 62,
    self.getBounds().x1 + 492, self.getBounds().y1 + 70).mouse(MOUSE_LEFT);

    timeMarker.start();

    repeat

      wait(randomRange(10, 30));
      result := (lock = self.isLocked());
    until (result or (timeMarker.getTime() > randomRange(1900, 2300)));
  end else
    result := true;
end;
{$ENDIF}

(*
TRSActionBar.lock
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.lock(): boolean;

Locks the Action Bar if it is unlocked.  Returns true on success.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.lock()) then
      writeln('Action Bar is now, or already was, locked.');
*)
function TRSActionBar.lock(): boolean;
begin

  result := self.__toggleLock(true);
end;

(*
TRSActionBar.unlock
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.unlock(): boolean;

Unlocks the Action Bar if it is locked.  Returns true on success.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.unlock()) then
      writeln('Action Bar is now, or alreay was, unlocked.');
*)
function TRSActionBar.unlock(): boolean;
begin

  result := self.__toggleLock(false);
end;

(*
TRSActionBar.clearSlot
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.clearSlot(slot: integer): boolean;

Clears the specified Action Bar slot.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.clearSlot(1)) then
      writeln('Successfully cleared slot 1 of the Action Bar.');
*)
function TRSActionBar.clearSlot(slot: integer): boolean;
var

  sloTBox: TBox;
begin

  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.clearSlot()', false));

  if (self.isSlotEmpty(slot)) then
    exit(true);

  self.unlock();

  wait(randomRange(314, 504));

  mouse(point(self.__slots[slot - 1].x1, self.__slots[slot - 1].y1).rand(29, 27), MOUSE_MOVE);
  wait(random(200));
  dragMouse(intToBox(self.getBounds().x1 + 486, self.getBounds().y1 + 41, self.getBounds().x1 + 492, self.getBounds().y1 + 51).getRandomPoint());

  wait(randomRange(100, 300));

  result := self.isSlotEmpty(slot);
end;

(*
TRSActionBar.clear
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.clear(): boolean;

Clears every slot of the Action Bar.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.clear()) then
      writeln('Successfully cleared the Action Bar.');
*)
function TRSActionBar.clear(): boolean;
var

  timeMarker: integer;
begin

  result := false;
  if (self.isEmpty()) then
    exit(true);

  intToBox(10, 360, 34, 383).mouse(MOUSE_RIGHT);

  timeMarker := getSystemTime() + randomRange(1504, 2306);

  while (getSystemTime() < timeMarker) do
    if (chooseOption.select(['Clear', 'all', 'r-a', 'ear', 'ar'])) then
    begin

      result := true;
      break;
    end;

  if (not result) then
    exit(false);

  timeMarker:= getSystemTime() + randomRange(1507, 2030);

  repeat

    result := self.isEmpty();
  until (result or (getSystemTime() > TimeMarker));
end;

{*
TRSActionBar.__getAbilityCooldown
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.getAbilityCooldown(slot: integer): integer;

Returns integer representation (0 - 100) of the cooldown of the ability
in the specified slot.

.. note::

    - by euphemism
    - Last Updated: 15 September 2013 by euphemism

Example:

.. code-block:: pascal

    result := self.__getAbilityCooldown(self.__slots[slot - 1], true);
*}
{$IFNDEF CODEINSIGHT}
function TRSActionBar.__getAbilityCooldown(boxToCheck: TBox; inActionBar: boolean = false): integer;
var
  colorFix, clientBitmap, i, len, sumTotal, tempBitmap: integer;
  valid: boolean;
  midPoint: TPoint;
  boxEdge, line, tpa: TPointArray;
  edgeSegments: T2DPointArray;
begin
  result := - 1;

  try
    clientBitmap := bitmapFromClient(boxToCheck.x1, boxToCheck.y1, boxToCheck.x2, boxToCheck.y2);
    setBitmapName(clientBitmap, 'Cooldown Bitmap');

    if (inActionBar) then
    begin

      tpa := tpaFromBox(intToBox(boxToCheck.x1 + 2, boxToCheck.y1 + 18, boxToCheck.x1 + 8, boxToCheck.y1 + 25));
      tpa.offset(point( - boxToCheck.x1, - boxToCheck.y1));

      for i := 0 to high(tpa) do
        fastSetPixel(clientBitmap, tpa[i].x, tpa[i].y, 0);
    end;

    tempBitmap := brightnessBitmap(clientBitmap, 100);
    freeBitmap(clientBitmap);

    clientBitmap := posterizeBitmap(tempBitmap, 60);
    freeBitmap(tempBitmap);

    tempBitmap := contrastBitmap(clientBitmap, 30);
    freeBitmap(clientBitmap);

    clientBitmap := desaturate(tempBitmap);
    freeBitmap(tempBitmap);

    boxToCheck.offset(point(- boxToCheck.x1, - boxToCheck.y1));

    if ((boxToCheck.x2 mod 2) = 0) then
      boxEdge := tpaFromLine(boxToCheck.x2 div 2 - 1, 0, 0, 0)
    else
      boxEdge := tpaFromLine(boxToCheck.x2 div 2, 0, 0, 0);

    appendTPA(boxEdge, tpaFromLine(0, 1, 0, boxToCheck.y2));
    appendTPA(boxEdge, tpaFromLine(1, boxToCheck.y2, boxToCheck.x2, boxToCheck.y2));
    appendTPA(boxEdge, tpaFromLine(boxToCheck.x2, boxToCheck.y2 - 1, boxToCheck.x2, 0));
    appendTPA(boxEdge, tpaFromLine(boxToCheck.x2 - 1, 0, boxEdge[0].x + 1, 0));

    len := length(boxEdge);

    for i := 0 to (len - 1) do
    begin

      if (inActionBar) then
      begin

        if (inRange(i, 0, len div 2)) then
          midPoint := point(14, 15)
        else
          midPoint := point(15, 14);
      end else
      begin

        if (inRange(i, 0, len div 2)) then
          midPoint := point(13, 14)
        else
          midPoint := point(14, 13);
      end;

      tpaFromLineWrap(midPoint.x, midPoint.y, boxEdge[i].x, boxEdge[i].y, line);
      line.sortFromPoint(midPoint);
      line.invert();

      if (i = 0) then
        setlength(line, 6)
      else
        setlength(line, length(line) - 3);

      sumTotal := 0;
      sumTotal := sumIntegerArray(fastGetPixels(clientBitmap, line));

      if (sumTotal <> 0) then
      begin

        result := ceil((round(fixD(degrees(arcTan2(boxEdge[i].x - midPoint.x, - (boxEdge[i].y - midPoint.y))))) / 360.0) * 100) + 1;

        if (result = 99) then
        begin

          colorFix := getColor(boxToCheck.x1 + 14, boxToCheck.y1 + 2);

          if ((colorFix = 6706) or (colorFix = 1710617)) then
          begin

            print('tabAbilityBook.__getAbilityCooldown() used the colorFix check.', TDebug.LOG);
            result := 100;
          end;
        end;

        break;
      end else
        if (i = (len - 1)) then
          result := 0;
    end;

  finally
    freeBitmap(clientBitmap);
  end;
end;
{$ENDIF}

(*
TRSActionBar.getAbilityCooldown
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.getAbilityCooldown(slot: integer): integer;

Returns integer representation (0 - 100) of the cooldown of the ability
in the specified slot.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.getAbilityCooldown(1) = 100) then
      writeln('The ability in slot 1 is at 100% and ready to use.');
*)
function TRSActionBar.getAbilityCooldown(slot: integer): integer;
begin
  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.getAbilityCooldown()', -1));

  if (self.isSlotEmpty(slot)) then
    exit(-1);

  result := self.__getAbilityCooldown(self.__slots[slot - 1], true);

  print('actionBar.getAbilityCooldown() checked slot ' + toStr(slot) + 'and got ' + toStr(result), TDebug.LOG);
end;

begin
  actionBar.__init();
end;
