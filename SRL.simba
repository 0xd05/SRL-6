//----------------------------------------------------------------------------//
//--                     SRL Standard Resource Library                      --//
//----------------------------------------------------------------------------//
//-- by: Azeroth, Bebe, BenLand100, benleegt, Boreas, c0de, Cheesehunk      --//
//--   Coh3n, dakota, Dankness, driger1592, EvilChicken!, Flyboy,           --//
//--   Freddy1990, Hobbit, IceFire908, inferno, Kernel Klink, Knightstreak, --//
//--   Krazy_Meerkat, Krichevskoy, Liquid, Lorax, lordsaturn, Mad Cow,      --//
//--   marpis, Markus, masquerader, mastaraymond, moparisthebest,           --//
//--   Mutant Squirrle, n3ss3s, N1ke, Naum, Nava2, nielsie95, phantombmx,   --//
//--   pups, Pyro, RAM, Rasta Magician, realrune, Renax, Ron, RsN,          --//
//--   SKy Scripter, solemn wishes, Spky, SRL, Starblaster100, Stupid3ooo,  --//
//--   Sumilion, tarajunky, The Claw, The_Rs_Monkey, TRiLeZ, Wizzup?,       --//
//--   WT-Fakawi, XxKanexX, Yakman, YoHoJo, ZephyrsFury, _ChArMz,           --//
//--                                                                        --//
//--                                ....... and the SRL Community.          --//
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
//--                          SRL Optional SMART                            --//
//--                                                                        --//
//--                SMART Minimizable Autoing Resource Thing                --//
//----------------------------------------------------------------------------//

{$IFDEF SMART}
    {$IFNDEF SRL_SMART}
        {$i srl-5/smart.simba}
    {$ENDIF}
{$ENDIF}

//----------------------------------------------------------------------------//
//--                         SRL Level 1 Includes                           --//
//--                                                                        --//
//--        Low Level Math, Mouse Movement and Color routines.              --//
//----------------------------------------------------------------------------//

{$i srl-5/lib/core/globals.simba}
{$i srl-5/lib/misc/utilities/math.simba}
{$i srl-5/lib/core/mouse.simba}
{$i srl-5/lib/color/color.simba}
{$i srl-5/lib/core/players.simba}

//----------------------------------------------------------------------------//
//--                         SRL Level 2 Includes                           --//
//--                                                                        --//
//--                     Interface and OCR routines.                        --//
//----------------------------------------------------------------------------//

{$i srl-5/lib/core/text.simba}
{$i srl-5/lib/core/timing.simba}
{$i srl-5/lib/chat/chat.simba}
{$i srl-5/lib/core/gametabs/gametab.simba}

//----------------------------------------------------------------------------//
//--                         SRL Level 3 Includes                           --//
//--                                                                        --//
//--   MapWalking, AntiRandoms, Objects, Bank, Symbol and many more...      --//
//----------------------------------------------------------------------------//

{$i srl-5/lib/misc/animation.simba}
{$i srl-5/lib/mapwalk/flag.simba}
{$i srl-5/lib/common/worldswitcher.simba}
{$i srl-5/lib/common/login.simba}
{$i srl-5/lib/color/autocolor.simba}
{$i srl-5/lib/mapwalk/mapwalk.simba}
{$i srl-5/lib/core/amount.simba}
{$i srl-5/lib/core/gametabs/inventory.simba}
{$i srl-5/lib/common/bank.simba}
{$i srl-5/lib/common/symbol.simba}
{$i srl-5/lib/common/antiban.simba}
{$i srl-5/lib/antirandoms/common.simba}
{$i srl-5/lib/antirandoms/certer.simba}
{$i srl-5/lib/antirandoms/demon.simba}
{$i srl-5/lib/antirandoms/forester.simba}
{$i srl-5/lib/antirandoms/quiz.simba}
{$i srl-5/lib/antirandoms/sandwich.simba}
{$i srl-5/lib/antirandoms/evilbob.simba}
{$i srl-5/lib/antirandoms/leo.simba}
{$i srl-5/lib/antirandoms/frog.simba}
{$i srl-5/lib/antirandoms/molly.simba}
{$i srl-5/lib/antirandoms/pillory.simba}
{$i srl-5/lib/antirandoms/pinball.simba}
{$i srl-5/lib/antirandoms/maze.simba}
{$i srl-5/lib/antirandoms/capnarnav.simba}
{$i srl-5/lib/antirandoms/beekeeper.simba}
{$i srl-5/lib/antirandoms/abyss.simba}
{$i srl-5/lib/antirandoms/mordaut.simba}
{$i srl-5/lib/antirandoms/prisonpete.simba}
{$i srl-5/lib/antirandoms/mime.simba}
{$i srl-5/lib/antirandoms/antirandoms.simba}

(*
SetUpSRL
~~~~~~~~~~~

.. code-block:: pascal

    procedure SetUpSRL;

Initiates  SRL

.. note::

  by SRL Dev Team

*)

procedure SetUpSRL;
var
  T: Integer;
begin

  { By default throw exceptions on faulty arguments passed to find* functions. }
  {$IFDEF SRL_DEBUG}
  SetSupressExceptions(True);
  {$ELSE}
  SetSupressExceptions(False);
  {$ENDIF}
  SetUpBoxes; //Sets up box variables in globals.simba
  T := GetTimeRunning;
  MouseSpeed := 15;
  {$IFDEF UseLaptopMouse}
    LMouse_MissChance := 75;
  {$ENDIF}
  CheckHPFirst := True;
  Reincarnate := False;
  TalkAfterRandoms := False;
  Banks := 0;
  RoadColor := 0;
  WaterColor := 0;
  BankColor := 0;
  LoadCosineArrays;
  SymbolAccuracy:= 0.8;
  LoadTeleRandoms;
  SolveSRLRandoms := True;
  UseFindMod := True;
  LogoutOnMod := True;
  UseFindTrade := True;
  Screenshots := False;
  GraphicsSet := False;
  AllowPVP    := False;
  ScreenShots := True;
  WarnSensitivity := -2;
  SetupAutoColors;
  AddOnTerminate('FreeSRL');
  SetSupressExceptions(true);
  Writeln ('SRL Compiled in '+  IntToStr(GetTimeRunning - T) + ' ms.');
 {$IFDEF SRL_SMART}
    if (Smart_Server = 0) then
    begin
      Smart_Server := 1
      Smart_Signed := True;
      Smart_SuperDetail := False;
    end;
    Writeln('SMART Initialized.' + #10 + 'Loaded: Server ' + IntToStr(Smart_Server) + ', Members: ' + BoolToStr(Smart_Members)
            + ', Signed: ' + BoolToStr(Smart_Signed) + ', Super Detail: ' + BoolToStr(Smart_SuperDetail) + '.');
    SmartSetupEx(Smart_Server, Smart_Members, Smart_Signed, Smart_SuperDetail);
    SetTargetArray(SmartImageArray, 765,503);
    repeat
      Wait(100);
      if (GetTimeRunning - T) > 120000 then
        Break;
    until (RSReady);
  {$ELSE}
    Smart_Server := 0;
    Smart_Members := False;
    Smart_Signed := True;
    Smart_SuperDetail := False;
  {$ENDIF}
end;

procedure FreeSRL;
begin
end;

begin
end.
